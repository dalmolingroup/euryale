{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/dalmolingroup/euryale/master/nextflow_schema.json",
    "title": "dalmolingroup/euryale pipeline parameters",
    "description": "A pipeline for metagenomic taxonomic classification and functional annotation. Based on MEDUSA.",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "outdir"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                },
                "save_dbs": {
                    "type": "boolean",
                    "description": "Save DIAMOND db to results directory after construction"
                }
            }
        },
        "skip_steps": {
            "title": "Skip Steps",
            "type": "object",
            "description": "Choose to skip pipeline steps",
            "default": "",
            "properties": {
                "skip_classification": {
                    "type": "boolean",
                    "fa_icon": "fab fa-pagelines",
                    "description": "Skip taxonomic classification"
                },
                "skip_alignment": {
                    "type": "boolean",
                    "fa_icon": "fas fa-align-justify",
                    "description": "Skip alignment"
                },
                "skip_functional": {
                    "type": "boolean",
                    "fa_icon": "fas fa-database",
                    "description": "Skip functional annotation"
                },
                "skip_host_removal": {
                    "type": "boolean",
                    "description": "Skip host removal",
                    "fa_icon": "fab fa-ioxhost"
                },
                "skip_microview": {
                    "type": "boolean",
                    "fa_icon": "fas fa-glasses",
                    "description": "Skip MicroView report"
                },
                "skip_preprocess": {
                    "type": "boolean",
                    "description": "Skip Preprocessing steps",
                    "fa_icon": "fas fa-cut"
                }
            },
            "fa_icon": "fas fa-angle-double-right"
        },
        "decontamination": {
            "title": "Decontamination",
            "type": "object",
            "description": "",
            "default": "",
            "fa_icon": "fas fa-hand-sparkles",
            "properties": {
                "host_fasta": {
                    "type": "string",
                    "fa_icon": "fas fa-align-justify",
                    "description": "Host FASTA to use for decontamination"
                },
                "bowtie2_db": {
                    "type": "string",
                    "fa_icon": "fas fa-database",
                    "description": "Pre-built bowtie2 index. Directory where index is located."
                }
            }
        },
        "alignment": {
            "title": "Alignment",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "reference_fasta": {
                    "type": "string",
                    "description": "Path to FASTA genome file.",
                    "fa_icon": "fas fa-align-justify"
                },
                "diamond_db": {
                    "type": "string",
                    "description": "Path to pre-built DIAMOND db.",
                    "fa_icon": "fas fa-database"
                }
            },
            "fa_icon": "fas fa-align-center"
        },
        "taxonomy": {
            "title": "Taxonomy",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "kaiju_db": {
                    "type": "string",
                    "fa_icon": "fas fa-database",
                    "description": "Kaiju database"
                },
                "kraken2_db": {
                    "type": "string",
                    "fa_icon": "fas fa-database",
                    "description": "Kraken2 database"
                },
                "run_kaiju": {
                    "type": "boolean",
                    "default": true,
                    "fa_icon": "fas fa-bacterium",
                    "description": "Run Kaiju classifier"
                },
                "run_kraken2": {
                    "type": "boolean",
                    "fa_icon": "fas fa-bacterium",
                    "description": "Run Kraken2 classifier"
                }
            },
            "fa_icon": "fab fa-pagelines"
        },
        "functional": {
            "title": "Functional",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "id_mapping": {
                    "type": "string",
                    "description": "Path to ID mapping file to be used for the Functional annotation"
                },
                "minimum_bitscore": {
                    "type": "integer",
                    "default": 50,
                    "description": "Minimum bitscore of a match to be used for annotation"
                },
                "minimum_pident": {
                    "type": "integer",
                    "default": 80,
                    "description": "Minimum identity of a match to be used for annotation"
                },
                "minimum_alen": {
                    "type": "integer",
                    "default": 50,
                    "description": "Minimum alignment length of a match to be used for annotation"
                },
                "maximum_evalue": {
                    "type": "number",
                    "default": 0.0001,
                    "description": "Maximum evalue of a match to be used for annotation"
                }
            },
            "fa_icon": "fas fa-gavel"
        },
        "assembly": {
            "title": "Assembly",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "assembly_based": {
                    "type": "boolean",
                    "fa_icon": "fas fa-check"
                }
            },
            "fa_icon": "fas fa-align-justify"
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "fasta": {
                    "type": "string"
                }
            }
        },
        "download_entry": {
            "title": "Download Entry",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "download_functional": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to download functional references"
                },
                "download_kaiju": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to download the Kaiju reference db"
                },
                "download_kraken": {
                    "type": "boolean",
                    "description": "Whether to download the Kraken2 reference db"
                },
                "download_host": {
                    "type": "boolean",
                    "description": "Whether to download the host reference genome"
                },
                "functional_db": {
                    "type": "string",
                    "default": "https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/nr.gz",
                    "description": "Functional reference URL (download entry)"
                },
                "functional_dictionary": {
                    "type": "string",
                    "default": "https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/idmapping/idmapping.dat.gz",
                    "description": "Functional dictionary URL (download entry)"
                },
                "kaiju_db_url": {
                    "type": "string",
                    "default": "https://kaiju-idx.s3.eu-central-1.amazonaws.com/2023/kaiju_db_nr_2023-05-10.tgz",
                    "description": "Kaiju reference URL (download entry)"
                },
                "kraken2_db_url": {
                    "type": "string",
                    "default": "https://genome-idx.s3.amazonaws.com/kraken/k2_standard_08gb_20240112.tar.gz",
                    "description": "Kraken2 reference URL (download entry)"
                },
                "host_url": {
                    "type": "string",
                    "default": "http://ftp.ensembl.org/pub/release-112/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                    "description": "Host FASTA reference URL (download entry)"
                }
            },
            "fa_icon": "fas fa-database"
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "schema_ignore_params": {
                    "type": "string",
                    "default": "genomes",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/skip_steps"
        },
        {
            "$ref": "#/definitions/decontamination"
        },
        {
            "$ref": "#/definitions/alignment"
        },
        {
            "$ref": "#/definitions/taxonomy"
        },
        {
            "$ref": "#/definitions/functional"
        },
        {
            "$ref": "#/definitions/assembly"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/download_entry"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
